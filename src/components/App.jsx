import { useState, useEffect } from 'react';
import { Toaster } from 'react-hot-toast';

import { fetchImages } from '../services/fetchImages';

import { Searchbar } from './Searchbar/Searchbar';
import { ImageGallery } from './ImageGallery/ImageGallery';
import { Button } from './Button/Button';
import { Loader } from './Loader/Loader';
import { Modal } from './Modal/Modal';

export const App = () => {
  const [inputValue, setInputValue] = useState('');
  const [query, setQuery] = useState('');
  const [page, setPage] = useState(0);
  const [images, setImages] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [lastPage, setLastPage] = useState(0);
  const [error, setError] = useState(null);
  const [modal, setModal] = useState({
    showModal: false,
    largeImageURL: '',
  });
  const [noResults, setNoResults] = useState(false);

  const handleChange = event => {
    setInputValue(event.target.value);
  };

  const onClickClear = () => {
    setInputValue('');
  };

  const handleSubmit = event => {
    event.preventDefault(); // –∑—É–ø–∏–Ω—è—î–º–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏

    if (inputValue === '') {
      alert('Please enter your query'); // —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –ø—É—Å—Ç–∏–π –∑–∞–ø–∏—Ç
      return;
    }

    if (query === inputValue) return; // —è–∫—â–æ –∑–∞–ø–∏—Ç –Ω–µ –∑–º—ñ–Ω–∏–≤—Å—è, —Ç–æ –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ
    setImages([]);
    setQuery(inputValue);
    setPage(1);
  };

  const handleLoadMore = () => { // —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "Load more"
    setPage(prevState => prevState + 1);
  };

  const toggleModal = () => {
    setModal(prevState => ({ ...prevState, showModal: !prevState.showModal })); // –∑–º—ñ–Ω—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è showModal –Ω–∞ –ø—Ä–æ—Ç–∏–ª–µ–∂–Ω–µ
  };

  // —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
  const handleImageClick = largeImageURL => {
    setModal(prevState => ({ ...prevState, largeImageURL }));
    toggleModal();
  };

  useEffect(() => {
    if (page === 0) return;

    const fetchImagesByQuery = async searchQuery => {
      setIsLoading(true); // –ø–æ–∫–∞–∑—É—î–º–æ –ª–æ–∞–¥–µ—Ä
      setError(null); // –æ—á–∏—â–∞—î–º–æ –ø–æ–º–∏–ª–∫—É
      setNoResults(false); // –æ—á–∏—â–∞—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤

      try {
        const response = await fetchImages(searchQuery, page);
        setImages(prevState => [...prevState, ...response.hits]);
        setLastPage(Math.ceil(response.totalHits / 12));
        response.totalHits === 0 && setNoResults(true); // —è–∫—â–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –Ω–µ–º–∞—î, —Ç–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è

      } catch (error) {
        setError(error);
      } finally {
        setIsLoading(false); // –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –ª–æ–∞–¥–µ—Ä
      }
    };

    fetchImagesByQuery(query);
  }, [page, query]);

    return (
      <div>
        <Toaster
          toastOptions={{
            duration: 1500,
          }}
        />

        <Searchbar
        onSubmit={handleSubmit}
        onChange={handleChange}
        onClickClear={onClickClear}
        inputValue={inputValue} 
        />

        {error && (
          <h2 style={{ textAlign: 'center' }}>
            Something went wrong: ({error})!
          </h2>
        )}

        <ImageGallery images={images} onImageClick={handleImageClick} />

        {isLoading && <Loader />}
        {noResults && (
          <h2 style={{ textAlign: 'center' }}>
            Sorry. There are no images ... üò≠
          </h2>
        )}

        {page < lastPage && !isLoading ? (
        <Button label="Load more" handleLoadMore={handleLoadMore} />
      ) : (
        <div style={{ height: 40 }}></div>
      )}

      {/* —è–∫—â–æ showModal === true, —Ç–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ */}
      {modal.showModal && <Modal onClose={toggleModal} largeImageURL={modal.largeImageURL} />}
    </div>
    );
  }


